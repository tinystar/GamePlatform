#include "xEzMemoryPool.h"


//------------------------------------------------------
// EzMemPoolConfig
//------------------------------------------------------
const size_t EzMemPoolConfig::s_blockSizes[kBlockCount + 1] = 
{
	0x0000,
	0x0004, 0x0008, 0x000c, 0x0010,
	0x0014, 0x0018, 0x001c, 0x0020,
	0x0024, 0x0028, 0x002c, 0x0030,
	0x0034, 0x0038, 0x003c, 0x0040,
	0x0044, 0x0048, 0x004c, 0x0050,
	0x0054, 0x0058, 0x005c, 0x0060,
	0x0064, 0x0068, 0x006c, 0x0070,
	0x0074, 0x0078, 0x007c, 0x0080,
	0x0084, 0x0088, 0x008c, 0x0090,
	0x0094, 0x0098, 0x009c, 0x00a0,
	0x00a4, 0x00a8, 0x00ac, 0x00b0,
	0x00b4, 0x00b8, 0x00bc, 0x00c0,			// 192
	0x00c8, 0x00d0, 0x00d8, 0x00e0,
	0x00e8, 0x00f0, 0x00f8, 0x0100,			// 256
	0x0200, 0x0400, 0x0800, 0x1000			// 512, 1024, 2048, 4096
};

const EzByte EzMemPoolConfig::s_memSizeToBlockIndex[257] =
{
	0x00,
	0x01, 0x01, 0x01, 0x01,
	0x02, 0x02, 0x02, 0x02,
	0x03, 0x03, 0x03, 0x03,
	0x04, 0x04, 0x04, 0x04,
	0x05, 0x05, 0x05, 0x05,
	0x06, 0x06, 0x06, 0x06,
	0x07, 0x07, 0x07, 0x07,
	0x08, 0x08, 0x08, 0x08,
	0x09, 0x09, 0x09, 0x09,
	0x0a, 0x0a, 0x0a, 0x0a,
	0x0b, 0x0b, 0x0b, 0x0b,
	0x0c, 0x0c, 0x0c, 0x0c,
	0x0d, 0x0d, 0x0d, 0x0d,
	0x0e, 0x0e, 0x0e, 0x0e,
	0x0f, 0x0f, 0x0f, 0x0f,
	0x10, 0x10, 0x10, 0x10,
	0x11, 0x11, 0x11, 0x11,
	0x12, 0x12, 0x12, 0x12,
	0x13, 0x13, 0x13, 0x13,
	0x14, 0x14, 0x14, 0x14,
	0x15, 0x15, 0x15, 0x15,
	0x16, 0x16, 0x16, 0x16,
	0x17, 0x17, 0x17, 0x17,
	0x18, 0x18, 0x18, 0x18,
	0x19, 0x19, 0x19, 0x19,
	0x1a, 0x1a, 0x1a, 0x1a,
	0x1b, 0x1b, 0x1b, 0x1b,
	0x1c, 0x1c, 0x1c, 0x1c,
	0x1d, 0x1d, 0x1d, 0x1d,
	0x1e, 0x1e, 0x1e, 0x1e,
	0x1f, 0x1f, 0x1f, 0x1f,
	0x20, 0x20, 0x20, 0x20,
	0x21, 0x21, 0x21, 0x21,
	0x22, 0x22, 0x22, 0x22,
	0x23, 0x23, 0x23, 0x23,
	0x24, 0x24, 0x24, 0x24,
	0x25, 0x25, 0x25, 0x25,
	0x26, 0x26, 0x26, 0x26,
	0x27, 0x27, 0x27, 0x27,
	0x28, 0x28, 0x28, 0x28,
	0x29, 0x29, 0x29, 0x29,
	0x2a, 0x2a, 0x2a, 0x2a,
	0x2b, 0x2b, 0x2b, 0x2b,
	0x2c, 0x2c, 0x2c, 0x2c,
	0x2d, 0x2d, 0x2d, 0x2d,
	0x2e, 0x2e, 0x2e, 0x2e,
	0x2f, 0x2f, 0x2f, 0x2f,
	0x30, 0x30, 0x30, 0x30,			// 192
	0x31, 0x31, 0x31, 0x31,
	0x31, 0x31, 0x31, 0x31,
	0x32, 0x32, 0x32, 0x32,
	0x32, 0x32, 0x32, 0x32,
	0x33, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x33,
	0x34, 0x34, 0x34, 0x34,
	0x34, 0x34, 0x34, 0x34,
	0x35, 0x35, 0x35, 0x35,
	0x35, 0x35, 0x35, 0x35,
	0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36,
	0x37, 0x37, 0x37, 0x37,
	0x37, 0x37, 0x37, 0x37,
	0x38, 0x38, 0x38, 0x38,
	0x38, 0x38, 0x38, 0x38			// 256
};

int EzMemPoolConfig::sGetBlockIndex(size_t size)
{
	if (!EzVerify(size > 0))
		return 0;

	if (0 < size && size <= 256)
		return s_memSizeToBlockIndex[size];

	if (size < 500)
		return 0;
	if (size <= 512)
		return 57;
	if (size < 1000)
		return 0;
	if (size <= 1024)
		return 58;
	if (size < 2000)
		return 0;
	if (size <= 2048)
		return 59;
	if (size < 4000)
		return 0;
	if (size <= 4096)
		return 60;
	
	return 0;
}

size_t EzMemPoolConfig::sGetBlockSize(int index)
{
	if (!EzVerify(0 <= index && index <= kBlockCount))
		return 0;

	return s_blockSizes[index];
}


//------------------------------------------------------
// Global memory pool define
//------------------------------------------------------
EzMemPool<EzMemPoolConfig> g_memPool;
